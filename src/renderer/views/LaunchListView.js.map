{"version":3,"file":"LaunchListView.js","sourceRoot":"","sources":["LaunchListView.ts"],"names":[],"mappings":";;AACA,mEAA8D;AAQ9D,MAAa,cAAc;IASvB,YAAY,SAAyB;QACjC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QACxE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,iCAAe,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,gGAAgG;QAChG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,IAAW,aAAa,CAAC,OAAiC;QACtD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;SAC3B;IACL,CAAC;IAEM,IAAI,CAAC,KAAmB;QAC3B,MAAM,MAAM,GAAG,cAAc,CAAC,aAAa,CAAC;QAC5C,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAChD,MAAM,IAAI,GAAG,IAAI,gBAAgB,EAAE,CAAC;QACpC,MAAM,OAAO,GAAG,cAAc,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAC3D,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACtB,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YACjD,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAE1B,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SAClD;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxC;QAED,oEAAoE;QACpE,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,QAAQ,IAAI,QAAQ,CAAC,UAAU,EAAE;YACjC,qDAAqD;YACrD,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAsB,CAAC;SAC/E;IACL,CAAC;IAEM,UAAU;QACb,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAEM,aAAa;QAChB,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;YAClD,IAAI,WAAW,IAAI,WAAW,CAAC,eAAe,EAAE;gBAC5C,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAsB,CAAC;aACvF;SACJ;QAED,EAAE;QACF,mFAAmF;QACnF,qBAAqB;QACrB,8GAA8G;QAC9G,IAAI;IACR,CAAC;IAEM,SAAS;QACZ,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;YAClD,IAAI,WAAW,IAAI,WAAW,CAAC,WAAW,EAAE;gBACxC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAsB,CAAC;aACnF;SACJ;QAED,gFAAgF;QAChF,qBAAqB;QACrB,4GAA4G;QAC5G,IAAI;IACR,CAAC;IAEM,UAAU;QACb,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;IAC1B,CAAC;IAEM,UAAU;QACb,MAAM,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACnE,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxC;IACL,CAAC;IAEO,uBAAuB;QAC3B,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAEO,eAAe,CAAC,EAAiB;QACrC,QAAO,EAAE,CAAC,GAAG,EAAE;YACX,KAAK,SAAS;gBACV,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACxB,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;gBAC3B,MAAM;YACV,KAAK,WAAW;gBACZ,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;gBAC7B,MAAM;YACV,KAAK,OAAO;gBACR,MAAM;YACV;gBACI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;gBAC5B,MAAM;SACb;IACL,CAAC;IAEO,0BAA0B;QAC9B,QAAQ,CAAC,kBAAkB,GAAG,GAAG,EAAE;YAC/B,QAAQ,QAAQ,CAAC,eAAe,EAAE;gBAC9B,KAAK,QAAQ;oBACT,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;oBAC1B,MAAM;gBACV,KAAK,SAAS;oBACV,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;oBAC3B,MAAM;aACb;QACL,CAAC,CAAA;IACL,CAAC;IAEO,gBAAgB,CAAC,EAAU;QAC/B,wEAAwE;QACxE,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;QAEZ,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC9C,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;QACpB,KAAK,CAAC,WAAW,GAAG,mBAAmB,CAAC;QACxC,KAAK,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;QAEtD,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACvB,OAAO,GAAG,CAAC;IACf,CAAC;IAEO,MAAM,CAAC,mBAAmB,CAAC,EAAU;QACzC,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;QACX,OAAO,EAAE,CAAC;IACd,CAAC;IAEO,iBAAiB,CAAC,IAAgB;QACtC,0DAA0D;QAC1D,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACtC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;QACb,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;QACf,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,OAAO,GAAG,CAAC,CAAa,EAAE,EAAE;YAC1B,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QAEpB,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxC,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACpB,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAClB,OAAO,EAAE,CAAC;IACd,CAAC;;AA9Ka,6BAAc,GAAW,YAAY,CAAC;AACtC,4BAAa,GAAW,cAAc,CAAC;AAFzD,wCAgLC","sourcesContent":["import {LaunchView} from \"./LaunchView\";\nimport {LaunchPresenter} from \"../presenters/LaunchPresenter\";\n\nexport interface LaunchItem {\n    displayOrder: number;\n    text: string;\n    icon: string;\n}\n\nexport class LaunchListView implements LaunchView {\n    public static inputElementId: string = \"input-view\";\n    public static listElementId: string = \"launch-items\";\n\n    private readonly htmlContainer: HTMLDivElement;\n    public readonly presenter: LaunchPresenter;\n    public readonly input: HTMLInputElement;\n    private activeElem: HTMLAnchorElement | null;\n\n    constructor(container: HTMLDivElement) {\n        this.htmlContainer = container;\n        const searchView = this.createSearchView(LaunchListView.inputElementId);\n        this.htmlContainer.appendChild(searchView);\n        this.input = searchView.getElementsByTagName(\"input\")[0];\n        this.activeElem = null;\n        this.presenter = new LaunchPresenter(this);\n        this.registerKeydownListener();\n        this.registerVisibilityListener();\n        // tell the presenter we are visible since the visibilityListener won't pick up the initial load\n        this.presenter.onVisible();\n    }\n\n    public get activeElement(): HTMLAnchorElement | null {\n        return this.activeElem;\n    }\n\n    public set activeElement(element: HTMLAnchorElement | null) {\n        this.activeElem = element;\n        if (this.activeElem) {\n            this.activeElem.focus();\n        }\n    }\n\n    public bind(items: LaunchItem[]): void {\n        const listId = LaunchListView.listElementId;\n        const oldList = document.getElementById(listId);\n        const frag = new DocumentFragment();\n        const newList = LaunchListView.createListContainer(listId);\n        for (const item of items) {\n            const listElement = this.createListElement(item);\n            newList.appendChild(listElement);\n        }\n        frag.appendChild(newList);\n\n        if (oldList) {\n            this.htmlContainer.replaceChild(frag, oldList);\n        } else {\n            this.htmlContainer.appendChild(frag);\n        }\n\n        // const firstListItem = document.getElementById(listId).firstChild;\n        const listItem = document.getElementById(listId);\n        if (listItem && listItem.firstChild) {\n            // set the (anchor tag of the) first result as active\n            this.activeElement = listItem.firstChild.childNodes[1] as HTMLAnchorElement;\n        }\n    }\n\n    public focusInput(): void {\n        this.input.focus();\n    }\n\n    public focusPrevious(): void {\n        if (this.activeElement) {\n            const prevElement = this.activeElement.parentNode;\n            if (prevElement && prevElement.previousSibling) {\n                this.activeElement = prevElement.previousSibling.childNodes[1] as HTMLAnchorElement;\n            }\n        }\n\n        //\n        // const prevElement = this.activeElement.parentNode.previousSibling; //.parentNode\n        // if (prevElement) {\n        //     this.activeElement = prevElement.children[1] as HTMLAnchorElement; // .firstChild as HTMLAnchorElement;\n        // }\n    }\n\n    public focusNext(): void {\n        if (this.activeElement) {\n            const nextElement = this.activeElement.parentNode;\n            if (nextElement && nextElement.nextSibling) {\n                this.activeElement = nextElement.nextSibling.childNodes[1] as HTMLAnchorElement;\n            }\n        }\n\n        // const nextElement = this.activeElement.parentNode.nextSibling; // .parentNode\n        // if (nextElement) {\n        //     this.activeElement = nextElement.children[1] as HTMLAnchorElement;//.firstChild as HTMLAnchorElement;\n        // }\n    }\n\n    public clearInput(): void {\n        this.input.value = \"\";\n    }\n\n    public clearItems(): void {\n        const list = document.getElementById(LaunchListView.listElementId);\n        if (list) {\n            this.htmlContainer.removeChild(list);\n        }\n    }\n\n    private registerKeydownListener(): void {\n        window.onkeydown = this.keydownNotifier.bind(this);\n    }\n\n    private keydownNotifier(ev: KeyboardEvent): void {\n        switch(ev.key) {\n            case \"ArrowUp\":\n                console.log(\"Arrow up\");\n                this.presenter.onArrowUp();\n                break;\n            case \"ArrowDown\":\n                console.log(\"Arrow down\");\n                this.presenter.onArrowDown();\n                break;\n            case \"Enter\":\n                break;\n            default:\n                this.presenter.onOtherKey();\n                break;\n        }\n    }\n\n    private registerVisibilityListener(): void {\n        document.onvisibilitychange = () => {\n            switch (document.visibilityState) {\n                case \"hidden\":\n                    this.presenter.onHidden();\n                    break;\n                case \"visible\":\n                    this.presenter.onVisible();\n                    break;\n            }\n        }\n    }\n\n    private createSearchView(id: string): HTMLDivElement {\n        // <input id=\"txt-search\" type=\"text\" placeholder=\"Search...\" autofocus>\n        const div = document.createElement(\"div\");\n        div.id = id;\n\n        const input = document.createElement(\"input\");\n        input.type = \"text\";\n        input.placeholder = \"Type to search...\";\n        input.oninput = () => this.presenter.onInputChanged();\n\n        div.appendChild(input);\n        return div;\n    }\n\n    private static createListContainer(id: string): HTMLOListElement {\n        const ol = document.createElement(\"ol\");\n        ol.id = id;\n        return ol;\n    }\n\n    private createListElement(item: LaunchItem): HTMLLIElement {\n        // need to create anchor tag so we have something to focus\n        const a = document.createElement(\"a\");\n        a.href = \"#\";\n        a.tabIndex = 0;\n        a.innerText = item.text;\n        a.onclick = (e: MouseEvent) => {\n            e.preventDefault();\n            this.presenter.onLaunchItemSelected(item);\n        };\n\n        const img = document.createElement(\"img\");\n        img.src = item.icon;\n\n        const li = document.createElement(\"li\");\n        li.appendChild(img);\n        li.appendChild(a);\n        return li;\n    }\n}"]}